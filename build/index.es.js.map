{"version":3,"file":"index.es.js","sources":["../src/DynamiCSS.ts"],"sourcesContent":["import { DynamicSheet, DynamicSheetRule } from \"./DynamicStyle/DynamicStyle\";\r\n\r\nexport namespace DynamiCSS {\r\n    /**\r\n     * Inserts a stylesheet into the DOM.\r\n     * When an error occurs returns an empty string\r\n     * @param dynamicSheet a dyncamic sheet\r\n     * @return the id of the stylesheet in string format\r\n     */\r\n    export function insertStyleSheet(dynamicSheet: DynamicSheet): string {\r\n        let result_id = \"\";\r\n        if (typeof window === \"undefined\") {\r\n            return \"\";\r\n        }\r\n        if (!dynamicSheet) {\r\n            return \"\";\r\n        }\r\n        //if already exists\r\n        if (document.getElementById(dynamicSheet.id)) {\r\n            return dynamicSheet.id;\r\n        }\r\n        result_id = dynamicSheet.id;\r\n        var styleSheet: HTMLStyleElement = document.createElement(\"style\");\r\n        styleSheet.id = result_id;\r\n        styleSheet.setAttribute(\"type\", \"text/css\");\r\n        const contetRaw: string = toRawStyleSheet(dynamicSheet.sheetRules || []) + dynamicSheet.raw || \"\";\r\n        styleSheet.textContent = contetRaw;\r\n        const appendResult: HTMLStyleElement = document.head.appendChild(styleSheet);\r\n        if (!appendResult) {\r\n            return \"\";\r\n        }\r\n\r\n        return result_id;\r\n    }\r\n    /**\r\n     * \r\n     * @param id the id of he style sheet\r\n     * @param sheetRules the set of rules\r\n     * @returns an empty string or the id\r\n     */\r\n    export function editStyleSheet(id: string, sheetRules: DynamicSheetRule[]): string {\r\n        let result_id = \"\";\r\n        if (typeof window === \"undefined\") {\r\n            return \"\";\r\n        }\r\n        if (!id || !sheetRules) {\r\n            return \"\";\r\n        }\r\n        //if dont exists yet\r\n        var styleSheet: HTMLElement =document.getElementById(id);\r\n        if (!styleSheet) {\r\n            return \"\";\r\n        }\r\n       /*  result_id = id;\r\n        //var styleSheet: HTMLStyleElement = document.createElement(\"style\");\r\n        styleSheet.id = result_id;\r\n        styleSheet.setAttribute(\"type\", \"text/css\"); */\r\n        styleSheet.textContent = toRawStyleSheet(sheetRules);\r\n        \r\n        return result_id;\r\n    }\r\n    /**\r\n     * Given an id in string format, checks into the DOM whether there is a style\r\n     * with the given id. If true, this function will remove the stylesheet and return the id.\r\n     * If not present, will return an empty string\r\n     * @param id the id of the stylesheet to remove if exists\r\n     * @returns the id or an empty string\r\n     */\r\n    export function removeStyleSheet(id: string): string {\r\n        let result_id = \"\";\r\n        if (!id) {\r\n            return \"\";\r\n        }\r\n        const htmlObject: HTMLElement = document.getElementById(id);\r\n        if (htmlObject) {\r\n            document.head.removeChild(htmlObject);\r\n            result_id = id;\r\n        }\r\n\r\n        return result_id;\r\n    }\r\n    /**\r\n     * Given an id in string format, checks into the DOM whether there is a style\r\n     * with the given id exists and returna boolean result\r\n     * @param id the id of the stylesheet to check if exists\r\n     * @returns true if the stylesheet was found\r\n     */\r\n    export function existStyleSheet(id: string): boolean {\r\n        if (!id) {\r\n            return false;\r\n        }\r\n        const htmlObject: HTMLElement = document.getElementById(id);\r\n        if (htmlObject) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Creates a stylesheet given a stylesheet\r\n     * @param styleSheet astylesheet\r\n     * @returns the new stylesheet object\r\n     */\r\n    export function makeStyleSheet(styleSheet: DynamicSheet): DynamicSheet {\r\n        if (!styleSheet) {\r\n            return null;\r\n        }\r\n        return styleSheet;\r\n    }\r\n}\r\n\r\n/**\r\n * Determines whether a character is upperCase or not\r\n * @param character a character\r\n * @returns true if str contains a string character\r\n */\r\nfunction isUpper(character: string): boolean {\r\n    if (!character) return false;\r\n    return !/[a-z]/.test(character) && /[A-Z]/.test(character);\r\n}\r\n/**\r\n * Converts a rule with uppercase to a hyphen-lowercase version\r\n * @param ruleLabel the rule\r\n * @returns a hyphen-lowercase label\r\n */\r\nfunction fromUpperCaseToHyphen(ruleLabel: string): string {\r\n    let result = \"\";\r\n    let charUpper = ' ';\r\n    let isupper: boolean = false;\r\n    for (let i = 0; i < ruleLabel.length; i++) {\r\n        const currentChar = ruleLabel[i];\r\n        if (isUpper(currentChar)) {\r\n            charUpper = currentChar;\r\n            isupper = true;\r\n            break;\r\n        }\r\n    }\r\n    //add hyphen\r\n    if (isupper) {\r\n        const parts: string[] = ruleLabel.split(charUpper);\r\n        result = `${parts[0]}-${charUpper.toLowerCase()}${parts[1]}`;\r\n    } else {\r\n        result = ruleLabel;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Checks if the label contains the \":\" character\r\n * @param ruleLabel the rule\r\n * @returns true if the rule label corresponds to a pseudo class\r\n */\r\nfunction isPseudo(ruleLabel: string): boolean {\r\n    if (!ruleLabel) return false;\r\n    return ruleLabel.includes(\":\");\r\n}\r\n\r\n/**\r\n * \r\n * @param className \r\n * @returns \r\n */\r\nexport function makeRawRuleLabel(className: string): string {\r\n    let result = \"\";\r\n    const splitedClassName: string[] = className.trim().split(\" \");\r\n    //is composed classname?\r\n    if (splitedClassName.length > 1) {\r\n        for (let i = 0; i < splitedClassName.length; i++) {\r\n            result += `.${splitedClassName[i]}`;\r\n        }\r\n        result += `{\\n`;\r\n    } else {\r\n        result += `.${className}{\\n`;\r\n    }\r\n\r\n    return result;\r\n}\r\n/**\r\n * \r\n * @param sheetRules \r\n * @returns \r\n */\r\nexport function toRawStyleSheet(sheetRules: DynamicSheetRule[]): string {\r\n    if (!sheetRules) {\r\n        return \"\";\r\n    }\r\n    let rawStyleSheet: string = \"\";\r\n    let nestedPseudos: DynamicSheetRule[] = [];\r\n\r\n    for (let j = 0; j < sheetRules.length; j++) {\r\n\r\n        const currentRule: DynamicSheetRule = sheetRules[j];\r\n\r\n        let currnetRawRule: string = \"\";\r\n        // currnetRawRule += `.${currentRule.className}{\\n`;\r\n        currnetRawRule += makeRawRuleLabel(currentRule.className);\r\n\r\n        //list of labels for rules\r\n        const ruleskeys: string[] = Object.keys(currentRule.rules);\r\n\r\n        for (let i = 0; i < ruleskeys.length; i++) {\r\n            const currentKey = ruleskeys[i];\r\n\r\n            const styleLabel: string = fromUpperCaseToHyphen(currentKey);\r\n            //if a pseudo class found, separate it\r\n            if (isPseudo(styleLabel)) {\r\n\r\n                const pseudoClassName: string = currentRule.className + styleLabel;\r\n                nestedPseudos.push({ className: pseudoClassName, rules: (currentRule as any).rules[styleLabel] });\r\n            } else {\r\n                const styleRule: string = (currentRule.rules as any)[currentKey];\r\n                currnetRawRule += `\\t${styleLabel} : ${styleRule};\\n`;\r\n            }\r\n\r\n        }\r\n        currnetRawRule += `}\\n`;\r\n\r\n        rawStyleSheet += currnetRawRule;\r\n    }\r\n    //nested pseudos\r\n\r\n\r\n    for (let p = 0; p < nestedPseudos.length; p++) {\r\n        let currnetRawRule: string = \"\";\r\n        const currentRule: DynamicSheetRule = nestedPseudos[p];\r\n        const ruleskeys: string[] = Object.keys(currentRule.rules);\r\n        currnetRawRule += `.${currentRule.className}{\\n`;\r\n        for (let i = 0; i < ruleskeys.length; i++) {\r\n            const currentKey = ruleskeys[i];\r\n            const styleLabel: string = fromUpperCaseToHyphen(currentKey);\r\n            const styleRule: string = (currentRule.rules as any)[currentKey];\r\n            currnetRawRule += `\\t${styleLabel} : ${styleRule};\\n`;\r\n        }\r\n        currnetRawRule += `}\\n`;\r\n        rawStyleSheet += currnetRawRule;\r\n    }\r\n    return rawStyleSheet;\r\n}"],"names":[],"mappings":"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"}